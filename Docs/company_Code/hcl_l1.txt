HelloController;


@RestController
public class HelloController
{
	@Autowired
	private UserService userService
	
	@PostMapping
	private void print(String s)
	{
		s= Hello;
        
	}
}

List<Integer> numbers = Arrays.asList(10,20,30,10,40,50,20,30,60);


List<Integer> result = numbers.stream().collect(Collectors.groupingBy(c->c,collectors.Counting())//10--2,20--2,3
						.entrySet().stream().filter(e->e.getValue()>1).map(e->e.getKey())
						.collect(Collectors.toList());



String s1 = "Hello";
String s2 = "Hello"
 
String s3 = new String ("Hello");
String s4 = new String("Hello");
 
System.out.println(s1 == s2); //true
System.out.println(s1 == s3); //false
System.out.println(s1 == s4); //false
 
System.out.println(s1.equals(s2)); //true
System.out.println(s1.equals(s3)); //true
System.out.println(s1.equals(s4));	 //true		


String s = "I am a boy"; //yob a ma I




StringBuffer sb = new StringBuffer(s);
//sb.revese();

String result = sb.reverse().toString();

String reversed="";
for(int i =s.length;i>0;i--)
{
	reverse+=s.charAt(i);
}


String str = "swiss"; //


Optional<String> firstNonRepeating = str.chars().mapToObj(c->(char)c)
									.collect(Collectors.groupingBy(c->c,collectors.Counting())
									.entrySet()
									.stream()
									.filter(e->e.getValue()==1)
									.map(e->e.getKey())
									.findFirst();//w
			
 
 
 //int[] arr = {10,20,4,45,99,99,45};
 
 
 Optional<Integer> secondHighest =Arrays.stream(arr)
								.sorted(Comparator.reverseOrder()).distinct().skip(1).
								  findFirst();


String input = "banana";

Map<Character,Long> charcount = input.chars().mapToObj(c->(char)c)
								.collect(Collectors.groupingBy(c->c,Collectors.Counting());
								
								
								
								
								
Employees table duplicate records

select * from employees e1 self join Employees e2 on e1.id=e2.id;


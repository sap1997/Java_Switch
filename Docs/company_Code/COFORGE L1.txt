A class implements two interfaces, both of which have the same default method log(). What happens? How do you resolve it?
 
interface A {
default void log() {
System.out.println("A log");
}
}
 
interface B {
default void log() {
System.out.println("B log");
}
}
Class AB implement a,b{
super.A.log()
super.B.log()
}
 
 Write single line code using java 8 only to Print numbers from 1to 100 sequentially . And in between while printing the number , if num/3 then Print Java. If num/5 then Print Programming.  If num/3 &num/5 then print "Java Programming"

IntStream.range(1,100).forEach(if(n%3==0){System.out.println("Java")} 
				else if(n%5==0){System.out.println("Programming")}
				else if{(n%3==0 && n%5==0){System.out.println("Java Programming")}
				else {System.out::println});




Write single line code using java 8 only to find the first non-repeated character in a string using Java 8 String str = "abacada" ;   o/p = b 


Optional<Character> firstnonrepeated = str.chars().mapToObj(c->(char)c)
				.collect(Collectors.groupingBy(c->c,LinkedHashMap::new,Collectors.counting())
				.entrySet().stream().filter(e->e.getValue()==1).map(e->e.getKey()).findFirst();
